package test.tests;

import org.testng.annotations.Test;
import test.Page.ActionType;
import test.Page.DiscountType;
import test.Page.LoginPage;
import test.Page.PackageData;
import test.PageObject.CreatePromotionPage;
import test.utilities.BaseTest;
import test.utilities.ConfigReader;

import java.util.Arrays;
import java.util.List;

public class CreatePromotion extends BaseTest {

    /**
     * Testcase: Chi·∫øt kh·∫•u ph·∫ßn trƒÉm
     * H√¨nh th·ª©c: TƒÉng k√®m SP c√πng lo·∫°i
     * M√¥ t·∫£: T·∫°o CTKM TƒÉng k√®m SP c√πng lo·∫°i
     */
    @Test
    public void testCreatePromotion_Gift() {
        login();
        CreatePromotionPage promotionPage = new CreatePromotionPage(driver);

        openCreatePromotionScreen(promotionPage);
        fillBasicInformation(promotionPage,"TangKemSPCungLoai");
        setConditionAndImportProduct(promotionPage);

        // üéÅ CTKM t·∫∑ng qu√† (GIFT_SAME)
        List<PackageData> giftPackages = Arrays.asList(
                new PackageData("T·ªïng gi√° tr·ªã nh√≥m s·∫£n ph·∫©m", "500000", "3", "Gi·∫£m tr·ª´ theo su·∫•t th·ª±c nh·∫≠n", ActionType.GIFT_SAME),
                new PackageData("S·ªë l∆∞·ª£ng m·ªói lo·∫°i s·∫£n ph·∫©m", "6", "2", "Gi·∫£m tr·ª´ theo su·∫•t th·ª±c nh·∫≠n", ActionType.GIFT_SAME),
                new PackageData("T·ªïng gi√° tr·ªã nh√≥m s·∫£n ph·∫©m", "4", "1", "Gi·∫£m tr·ª´ to√†n b·ªô s·∫£n ph·∫©m", ActionType.GIFT_SAME)
        );
        promotionPage.createTieredPackages(giftPackages);

        setupBudgetSlot(promotionPage);
        savePromotion(promotionPage);
    }
    /**
     * Testcase: Chi·∫øt kh·∫•u ph·∫ßn trƒÉm
     * H√¨nh th·ª©c: Chi·∫øt kh·∫•u
     * M√¥ t·∫£: T·∫°o CTKM chi·∫øt kh·∫•u % gi√° tr·ªã tr√™n t·ªïng ƒêH
     */
    @Test
    public void testDiscountPromotionTotal() {
        login();
        CreatePromotionPage promotionPage = new CreatePromotionPage(driver);

        openCreatePromotionScreen(promotionPage);
        fillBasicInformation(promotionPage, "ChietkhauTrenTongDH");
        setConditionAndImportProduct(promotionPage);

        // üü© T·∫°o 1 g√≥i chi·∫øt kh·∫•u ƒë∆°n gi·∫£n
        List<PackageData> packageDataList = Arrays.asList(
                // üéÅ G√≥i t·∫∑ng qu√†
                new PackageData("T·ªïng gi√° tr·ªã nh√≥m s·∫£n ph·∫©m", "500000", "10", "100000", DiscountType.TOTAL_ORDER, "", ""),
                // üí∏ G√≥i chi·∫øt kh·∫•u theo t·ªïng ƒë∆°n h√†ng
                new PackageData("T·ªïng gi√° tr·ªã nh√≥m s·∫£n ph·∫©m", "200000", "5", "100000", DiscountType.TOTAL_ORDER, "", ""),
                // üí∏ G√≥i chi·∫øt kh·∫•u theo ƒëi·ªÅu ki·ªán
                new PackageData("S·ªë l∆∞·ª£ng m·ªói lo·∫°i s·∫£n ph·∫©m", "6", "10", "100000", DiscountType.TOTAL_ORDER, "", "")
        );
        promotionPage.createAllPackages(packageDataList);

        setupBudgetAmount(promotionPage);
        savePromotion(promotionPage);
    }
    /**
     * Testcase: Chi·∫øt kh·∫•u ph·∫ßn trƒÉm
     * H√¨nh th·ª©c: Chi·∫øt kh·∫•u
     * M√¥ t·∫£: T·∫°o CTKM chi·∫øt kh·∫•u % gi√° tr·ªã nh√≥m s·∫£n ph·∫©m
     */
    @Test
    public void testDiscountPromotionGroup() {
        login();
        CreatePromotionPage promotionPage = new CreatePromotionPage(driver);

        openCreatePromotionScreen(promotionPage);
        fillBasicInformation(promotionPage,"ChietKhauTrenNhomDK");
        setConditionAndImportProduct(promotionPage);

        // üü© T·∫°o 1 g√≥i chi·∫øt kh·∫•u ƒë∆°n gi·∫£n
        List<PackageData> packageDataList = Arrays.asList(
                // üéÅ G√≥i t·∫∑ng qu√†
                new PackageData("T·ªïng gi√° tr·ªã nh√≥m s·∫£n ph·∫©m", "500000", "10", "100000", DiscountType.PRODUCT_GROUP, "", ""),
                // üí∏ G√≥i chi·∫øt kh·∫•u theo t·ªïng ƒë∆°n h√†ng
                new PackageData("T·ªïng gi√° tr·ªã nh√≥m s·∫£n ph·∫©m", "200000", "5", "100000", DiscountType.PRODUCT_GROUP, "", ""),
                // üí∏ G√≥i chi·∫øt kh·∫•u theo ƒëi·ªÅu ki·ªán
                new PackageData("S·ªë l∆∞·ª£ng m·ªói lo·∫°i s·∫£n ph·∫©m", "6", "10", "100000", DiscountType.PRODUCT_GROUP, "", "")
        );
        promotionPage.createAllPackages(packageDataList);

        setupBudgetAmount(promotionPage);
        savePromotion(promotionPage);
    }


    // ----- Shared setup methods -----
    private void login() {
        LoginPage loginPage = new LoginPage(driver);
        loginPage.login(ConfigReader.get("username"), ConfigReader.get("password"));
    }

    private void openCreatePromotionScreen(CreatePromotionPage promotionPage) {
        promotionPage.clickCreateNewButton();
    }

    private void fillBasicInformation(CreatePromotionPage promotionPage, String value) {
        promotionPage.enterPromotionCode();
        promotionPage.enterPromotionName(value);
        promotionPage.selectStartAndEndDate();
        promotionPage.selectPromotionType(2); // Normal
        promotionPage.selectStorage(1);       // Kho b√°n
        promotionPage.selectMethodStep(1);    // B·∫≠c thang
    }

    private void setConditionAndImportProduct(CreatePromotionPage promotionPage) {
        promotionPage.selectConditionProduct("Danh s√°ch s·∫£n ph·∫©m");
        promotionPage.importExcelProduct();
    }

    private void setupBudgetSlot(CreatePromotionPage promotionPage) {
        promotionPage.TotalBudget("SLOT", 100);
        promotionPage.AreaBudget(50,40);
        promotionPage.DistributorBudget(9900073, 30);
        promotionPage.permerchantBudget(30);
        promotionPage.fillBudgetProductByStep();

    }
    private void setupBudgetAmount(CreatePromotionPage promotionPage) {
        promotionPage.TotalBudget("AMOUNT", 100);
        promotionPage.AreaBudget(50,40);
        promotionPage.DistributorBudget(9900073, 30);
        promotionPage.permerchantBudget(30);
    }

    private void savePromotion(CreatePromotionPage promotionPage) {
        promotionPage.savePromotion();
    }
}
